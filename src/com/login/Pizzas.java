/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.login;

import java.awt.Color;
import java.awt.HeadlessException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import sql.ConexionSQL;
/**
 *
 * @author Rubén Sosa, Mario Lozano
 */
public class Pizzas extends javax.swing.JFrame {
    
    static String[] Datospizza;
    static String consultapizza = "SELECT * FROM pizzas WHERE pizza_nombre = ? AND pizza_tamaño = ? AND pizza_orilla = ?";
    
    static String tipo_pizza = "";
    static String especialidades = "";
    static String tipo_tamaño;
    static String tipo_orilla;
    static int contador = 0;
    int limite = 0;
    
    
    /**
     * Creates new form CrearPedido
     */
    private boolean cfTxtClick = false;
    private boolean hawTxtClick = false;
    private boolean pepTxtClick = false;
    private boolean mexTxtClick = false;
    private boolean kkTxtClick = false;
    private boolean vegTxtClick = false;
    private boolean espTxtClick = false;
    private boolean chinTxtClick = false;
    private boolean pasTxtClick = false;
    private boolean quesoTxtClick = false;
    private boolean mexwTxtClick = false;
    private boolean capTxtClick = false;
    public Pizzas() {
       
        initComponents();
        this.setExtendedState(this.MAXIMIZED_BOTH);
        
             
        ConexionSQL objetoPedido = new ConexionSQL(); 
        
        
        Pedido.MostrarPedido(tbPizza);       
        
        //DefaultTableModel tbLayout = null;   
        
       // tbLayout = PedidoControlador.estado(tbLayout);
       // PedidoControlador.MostrarPedido(tbPedido, tbLayout);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelEspacio = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jpanelTBblocation = new JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbPizza = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        lbMenu = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        cfBtn = new javax.swing.JPanel();
        cfTxt = new javax.swing.JLabel();
        hawBtn = new javax.swing.JPanel();
        hawTxt = new javax.swing.JLabel();
        pepBtn = new javax.swing.JPanel();
        pepTxt = new javax.swing.JLabel();
        mexBtn = new javax.swing.JPanel();
        mexTxt = new javax.swing.JLabel();
        kkBtn = new javax.swing.JPanel();
        kkTxt = new javax.swing.JLabel();
        vegBtn = new javax.swing.JPanel();
        vegTxt = new javax.swing.JLabel();
        espBtn = new javax.swing.JPanel();
        espTxt = new javax.swing.JLabel();
        chinBtn = new javax.swing.JPanel();
        chinTxt = new javax.swing.JLabel();
        pasBtn = new javax.swing.JPanel();
        pasTxt = new javax.swing.JLabel();
        quesoBtn = new javax.swing.JPanel();
        quesoTxt = new javax.swing.JLabel();
        mexwBtn = new javax.swing.JPanel();
        mexwTxt = new javax.swing.JLabel();
        capBtn = new javax.swing.JPanel();
        capTxt = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        capBtn6 = new javax.swing.JPanel();
        btnConfirmar = new javax.swing.JLabel();
        JLimite = new javax.swing.JLabel();
        jContador = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
        });

        jPanelEspacio.setBackground(new java.awt.Color(204, 204, 204));
        jPanelEspacio.setPreferredSize(new java.awt.Dimension(325, 680));

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel2.setText("Pedido");

        tbPizza.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tbPizza);

        javax.swing.GroupLayout jpanelTBblocationLayout = new javax.swing.GroupLayout(jpanelTBblocation);
        jpanelTBblocation.setLayout(jpanelTBblocationLayout);
        jpanelTBblocationLayout.setHorizontalGroup(
            jpanelTBblocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
        );
        jpanelTBblocationLayout.setVerticalGroup(
            jpanelTBblocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanelTBblocationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelEspacioLayout = new javax.swing.GroupLayout(jPanelEspacio);
        jPanelEspacio.setLayout(jPanelEspacioLayout);
        jPanelEspacioLayout.setHorizontalGroup(
            jPanelEspacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEspacioLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanelEspacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEspacioLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(162, 162, 162))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEspacioLayout.createSequentialGroup()
                        .addComponent(jpanelTBblocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );
        jPanelEspacioLayout.setVerticalGroup(
            jPanelEspacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEspacioLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel2)
                .addGap(68, 68, 68)
                .addComponent(jpanelTBblocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 153, 0));

        lbMenu.setBackground(new java.awt.Color(255, 255, 255));
        lbMenu.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lbMenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/regresar.png"))); // NOI18N
        lbMenu.setText("CREAR PEDIDO");
        lbMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbMenuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbMenuMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lbMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lbMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/logo.png"))); // NOI18N

        jLabel20.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Especialidades");

        cfBtn.setBackground(new java.awt.Color(255, 255, 255));
        cfBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cfBtn.setPreferredSize(new java.awt.Dimension(2, 66));

        cfTxt.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        cfTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cfTxt.setText("CARNES FRÍAS");
        cfTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cfTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cfTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cfTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout cfBtnLayout = new javax.swing.GroupLayout(cfBtn);
        cfBtn.setLayout(cfBtnLayout);
        cfBtnLayout.setHorizontalGroup(
            cfBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cfBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cfTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addContainerGap())
        );
        cfBtnLayout.setVerticalGroup(
            cfBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cfTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        hawBtn.setBackground(new java.awt.Color(255, 255, 255));
        hawBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        hawBtn.setPreferredSize(new java.awt.Dimension(2, 66));

        hawTxt.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        hawTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hawTxt.setText("HAWAIANA");
        hawTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hawTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hawTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hawTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout hawBtnLayout = new javax.swing.GroupLayout(hawBtn);
        hawBtn.setLayout(hawBtnLayout);
        hawBtnLayout.setHorizontalGroup(
            hawBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hawBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hawTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        hawBtnLayout.setVerticalGroup(
            hawBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hawTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pepBtn.setBackground(new java.awt.Color(255, 255, 255));
        pepBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pepBtn.setPreferredSize(new java.awt.Dimension(2, 66));

        pepTxt.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        pepTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pepTxt.setText("PEPERONÍ");
        pepTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pepTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pepTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pepTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pepBtnLayout = new javax.swing.GroupLayout(pepBtn);
        pepBtn.setLayout(pepBtnLayout);
        pepBtnLayout.setHorizontalGroup(
            pepBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pepBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pepTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addContainerGap())
        );
        pepBtnLayout.setVerticalGroup(
            pepBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pepTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        mexBtn.setBackground(new java.awt.Color(255, 255, 255));
        mexBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mexBtn.setPreferredSize(new java.awt.Dimension(2, 66));

        mexTxt.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        mexTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mexTxt.setText("MEXICANA");
        mexTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mexTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mexTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mexTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout mexBtnLayout = new javax.swing.GroupLayout(mexBtn);
        mexBtn.setLayout(mexBtnLayout);
        mexBtnLayout.setHorizontalGroup(
            mexBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mexBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mexTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addContainerGap())
        );
        mexBtnLayout.setVerticalGroup(
            mexBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mexTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        kkBtn.setBackground(new java.awt.Color(255, 255, 255));
        kkBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        kkBtn.setPreferredSize(new java.awt.Dimension(2, 66));

        kkTxt.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        kkTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        kkTxt.setText("KOKOS");
        kkTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kkTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                kkTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                kkTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout kkBtnLayout = new javax.swing.GroupLayout(kkBtn);
        kkBtn.setLayout(kkBtnLayout);
        kkBtnLayout.setHorizontalGroup(
            kkBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kkBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kkTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        kkBtnLayout.setVerticalGroup(
            kkBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kkTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        vegBtn.setBackground(new java.awt.Color(255, 255, 255));
        vegBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        vegBtn.setPreferredSize(new java.awt.Dimension(2, 66));

        vegTxt.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        vegTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vegTxt.setText("VEGETARIANA");
        vegTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vegTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                vegTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                vegTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout vegBtnLayout = new javax.swing.GroupLayout(vegBtn);
        vegBtn.setLayout(vegBtnLayout);
        vegBtnLayout.setHorizontalGroup(
            vegBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vegBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vegTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addContainerGap())
        );
        vegBtnLayout.setVerticalGroup(
            vegBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vegTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
        );

        espBtn.setBackground(new java.awt.Color(255, 255, 255));
        espBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        espBtn.setPreferredSize(new java.awt.Dimension(2, 66));

        espTxt.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        espTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        espTxt.setText("ESPECIAL");
        espTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                espTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                espTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                espTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout espBtnLayout = new javax.swing.GroupLayout(espBtn);
        espBtn.setLayout(espBtnLayout);
        espBtnLayout.setHorizontalGroup(
            espBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, espBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(espTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        espBtnLayout.setVerticalGroup(
            espBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(espTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        chinBtn.setBackground(new java.awt.Color(255, 255, 255));
        chinBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        chinBtn.setPreferredSize(new java.awt.Dimension(2, 66));

        chinTxt.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        chinTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chinTxt.setText("CHINGONA");
        chinTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chinTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                chinTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                chinTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout chinBtnLayout = new javax.swing.GroupLayout(chinBtn);
        chinBtn.setLayout(chinBtnLayout);
        chinBtnLayout.setHorizontalGroup(
            chinBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chinBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chinTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        chinBtnLayout.setVerticalGroup(
            chinBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chinTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
        );

        pasBtn.setBackground(new java.awt.Color(255, 255, 255));
        pasBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pasBtn.setPreferredSize(new java.awt.Dimension(2, 66));

        pasTxt.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        pasTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pasTxt.setText("PASTOR");
        pasTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pasTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pasTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pasTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pasBtnLayout = new javax.swing.GroupLayout(pasBtn);
        pasBtn.setLayout(pasBtnLayout);
        pasBtnLayout.setHorizontalGroup(
            pasBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pasBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pasTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pasBtnLayout.setVerticalGroup(
            pasBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pasTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
        );

        quesoBtn.setBackground(new java.awt.Color(255, 255, 255));
        quesoBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quesoBtn.setPreferredSize(new java.awt.Dimension(2, 66));

        quesoTxt.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        quesoTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quesoTxt.setText("QUESO");
        quesoTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quesoTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                quesoTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                quesoTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout quesoBtnLayout = new javax.swing.GroupLayout(quesoBtn);
        quesoBtn.setLayout(quesoBtnLayout);
        quesoBtnLayout.setHorizontalGroup(
            quesoBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, quesoBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(quesoTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        quesoBtnLayout.setVerticalGroup(
            quesoBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(quesoTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
        );

        mexwBtn.setBackground(new java.awt.Color(255, 255, 255));
        mexwBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mexwBtn.setPreferredSize(new java.awt.Dimension(2, 66));

        mexwTxt.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        mexwTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mexwTxt.setText("MEXIWAIANA");
        mexwTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mexwTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mexwTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mexwTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout mexwBtnLayout = new javax.swing.GroupLayout(mexwBtn);
        mexwBtn.setLayout(mexwBtnLayout);
        mexwBtnLayout.setHorizontalGroup(
            mexwBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mexwBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mexwTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        mexwBtnLayout.setVerticalGroup(
            mexwBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mexwTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        capBtn.setBackground(new java.awt.Color(255, 255, 255));
        capBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        capBtn.setPreferredSize(new java.awt.Dimension(2, 66));

        capTxt.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        capTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        capTxt.setText("CAPRICHOSA");
        capTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                capTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                capTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                capTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout capBtnLayout = new javax.swing.GroupLayout(capBtn);
        capBtn.setLayout(capBtnLayout);
        capBtnLayout.setHorizontalGroup(
            capBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, capBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(capTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addContainerGap())
        );
        capBtnLayout.setVerticalGroup(
            capBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(capTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jComboBox2.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.light"));
        jComboBox2.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sencilla", "Queso Manchego", "Queso Crema" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.light"));
        jComboBox3.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Individual", "Chica", "Mediana", "Grande", "Jumbo", "Rectangular" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Tamaño");

        jLabel25.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Orilla");

        capBtn6.setBackground(new java.awt.Color(255, 153, 0));
        capBtn6.setPreferredSize(new java.awt.Dimension(2, 66));

        btnConfirmar.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnConfirmar.setForeground(new java.awt.Color(0, 0, 0));
        btnConfirmar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnConfirmar.setText("CONFIRMAR");
        btnConfirmar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnConfirmarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnConfirmarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnConfirmarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout capBtn6Layout = new javax.swing.GroupLayout(capBtn6);
        capBtn6.setLayout(capBtn6Layout);
        capBtn6Layout.setHorizontalGroup(
            capBtn6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnConfirmar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        capBtn6Layout.setVerticalGroup(
            capBtn6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, capBtn6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        JLimite.setForeground(new java.awt.Color(0, 0, 0));
        JLimite.setText("Limite de especialidades:");

        jContador.setForeground(new java.awt.Color(0, 0, 0));
        jContador.setText("Contador: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel20)
                            .addComponent(mexBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(hawBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                                .addComponent(cfBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE))
                            .addComponent(pepBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel25)
                            .addComponent(espBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(kkBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(chinBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(vegBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JLimite, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jContador, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mexwBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(pasBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(quesoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(capBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(capBtn6, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE))))
                .addGap(126, 126, 126)
                .addComponent(jPanelEspacio, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelEspacio, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(JLimite)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jContador)))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(capBtn6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hawBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(espBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(capBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(quesoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(kkBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(cfBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chinBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                            .addComponent(pepBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(vegBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                            .addComponent(mexBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(pasBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mexwBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbMenuMouseClicked
        CrearPedido cp = new CrearPedido();
        cp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lbMenuMouseClicked

    private void lbMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbMenuMouseEntered
        jPanel3.setBackground(Color.orange);
    }//GEN-LAST:event_lbMenuMouseEntered

    private void lbMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbMenuMouseExited
        jPanel3.setBackground(new Color(247,148,29));
    }//GEN-LAST:event_lbMenuMouseExited

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseEntered

    private void hawTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hawTxtMouseClicked
        // TODO add your handling code here:
        try{
            if(contador == limite && hawTxtClick || hawBtn.getBackground().equals(new Color(247,148,29)) && hawTxtClick){
                hawBtn.setBackground(Color.white);
                contador --;
                mostrarContador();  
                especialidades = especialidades.replace("haw ", "");
                hawTxtClick = false;
                return;
            }
            if (contador < limite && !hawTxtClick) {
                switch (limite) {
                    case 1:
                        tipo_pizza = "hawaiana";
                        hawTxtClick = true;
                        hawBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 2:
                        tipo_pizza = "hawaiana";
                        especialidades += "haw ";
                        hawTxtClick = true;
                        hawBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 4:
                        tipo_pizza = "hawaiana";                          
                        especialidades += "haw ";
                        hawTxtClick = true;
                        hawBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                }
            }
            
        }catch(HeadlessException e){
            JOptionPane.showMessageDialog(null, "no se a seleccionado un tamaño" + e, "operacion", JOptionPane.ERROR_MESSAGE);
                
        }
        
                
    }//GEN-LAST:event_hawTxtMouseClicked

    private void hawTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hawTxtMouseEntered
        // TODO add your handling code here:
        if(!hawTxtClick){
            hawBtn.setBackground(new Color(247,148,29));
            
        }
    }//GEN-LAST:event_hawTxtMouseEntered

    private void hawTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hawTxtMouseExited
        // TODO add your handling code here:
        if(!hawTxtClick){
            hawBtn.setBackground(Color.white);            
            
        }
    }//GEN-LAST:event_hawTxtMouseExited

    private void cfTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cfTxtMouseClicked
        // TODO add your handling code here:
        try{
            if(contador == limite && cfTxtClick || cfBtn.getBackground().equals(new Color(247,148,29)) && cfTxtClick){
                cfBtn.setBackground(Color.white);
                contador --;
                mostrarContador(); 
                especialidades = especialidades.replace("cf ", "");
                cfTxtClick = false;
                return;
            }
            if (contador < limite && !cfTxtClick) {
                switch (limite) {
                    case 1:
                        tipo_pizza = "carnes frias";                   
                        cfTxtClick = true;
                        cfBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 2:
                        tipo_pizza = "carnes frias";                          
                        especialidades += "cf ";
                        cfTxtClick = true;
                        cfBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 4: 
                        tipo_pizza = "carnes frias";
                        especialidades += "cf ";
                        cfTxtClick = true;
                        cfBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                }
            }
            
        }catch(HeadlessException e){
            JOptionPane.showMessageDialog(null, "no se a seleccionado un tamaño" + e, "operacion", JOptionPane.ERROR_MESSAGE);
                
        }
    }//GEN-LAST:event_cfTxtMouseClicked

    private void cfTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cfTxtMouseEntered
        // TODO add your handling code here:
        if(!cfTxtClick){
            cfBtn.setBackground(new Color(247, 148, 29));
            
        }
    }//GEN-LAST:event_cfTxtMouseEntered

    private void cfTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cfTxtMouseExited
        // TODO add your handling code here:
        if(!cfTxtClick){
            cfBtn.setBackground(Color.white);
            
        }
    }//GEN-LAST:event_cfTxtMouseExited

    private void pepTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pepTxtMouseClicked
        // TODO add your handling code here:
        try{
            if(contador == limite && pepTxtClick || pepBtn.getBackground().equals(new Color(247,148,29)) && pepTxtClick){
                pepBtn.setBackground(Color.white);
                contador --;
                mostrarContador();      
                especialidades = especialidades.replace("pep ", "");
                pepTxtClick = false;
                return;
            }
            if (contador < limite && !pepTxtClick) {
                switch (limite) {
                    case 1:
                        tipo_pizza = "pepperoni";
                        pepTxtClick = true;
                        pepBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 2:
                        tipo_pizza = "pepperoni";                        
                        especialidades += "pep ";                    
                        pepTxtClick = true;
                        pepBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 4:
                        tipo_pizza = "pepperoni";                       
                        especialidades += "pep ";                    
                        pepTxtClick = true;
                        pepBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                }
            }
            
        }catch(HeadlessException e){
            JOptionPane.showMessageDialog(null, "no se a seleccionado un tamaño" + e, "operacion", JOptionPane.ERROR_MESSAGE);
                
        }
        
                
    }//GEN-LAST:event_pepTxtMouseClicked

    private void pepTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pepTxtMouseEntered
        // TODO add your handling code here:
        if(!pepTxtClick){
            pepBtn.setBackground(new Color(247, 148, 29));
        }
    }//GEN-LAST:event_pepTxtMouseEntered

    private void pepTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pepTxtMouseExited
        // TODO add your handling code here:
        if(!pepTxtClick){
            pepBtn.setBackground(Color.white);
            
        }
    }//GEN-LAST:event_pepTxtMouseExited

    private void mexTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mexTxtMouseClicked
        // TODO add your handling code here:
        try{
            if(contador == limite && mexTxtClick || mexBtn.getBackground().equals(new Color(247,148,29)) && mexTxtClick ){
                mexBtn.setBackground(Color.white);
                contador --;
                mostrarContador();    
                especialidades = especialidades.replace("mex ", "");
                mexTxtClick = false;
                return;
            }
            if (contador < limite && !mexTxtClick) {
                switch (limite) {
                    case 1:
                        tipo_pizza = "mexicana";
                    
                        mexTxtClick = true;
                        mexBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 2:
                        tipo_pizza = "mexicana";                                                
                        especialidades += "mex ";
                        mexTxtClick = true;
                        mexBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 4:
                        tipo_pizza = "mexicana";                                                
                        especialidades += "mex ";                    
                        mexTxtClick = true;
                        mexBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                }
            }
            
        }catch(HeadlessException e){
            JOptionPane.showMessageDialog(null, "no se a seleccionado un tamaño" + e, "operacion", JOptionPane.ERROR_MESSAGE);
                
        }
        
                
    }//GEN-LAST:event_mexTxtMouseClicked

    private void mexTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mexTxtMouseEntered
        // TODO add your handling code here:
        if(!mexTxtClick){
            mexBtn.setBackground(new Color(247, 148, 29));
        }
    }//GEN-LAST:event_mexTxtMouseEntered

    private void mexTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mexTxtMouseExited
        // TODO add your handling code here:
        if(!mexTxtClick){
            mexBtn.setBackground(Color.white);
        }
    }//GEN-LAST:event_mexTxtMouseExited

    private void espTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_espTxtMouseClicked
        // TODO add your handling code here:
        try{
            if(contador == limite && espTxtClick || espBtn.getBackground().equals(new Color(247,148,29)) && espTxtClick ){
                espBtn.setBackground(Color.white);
                contador --;
                mostrarContador();    
                especialidades = especialidades.replace("esp ", "");
                espTxtClick = false;
                return;
            }
            if (contador < limite && !espTxtClick) {
                switch (limite) {
                    case 1:
                        tipo_pizza = "especial";
                    
                        espTxtClick = true;
                        espBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 2:
                        tipo_pizza = "especial";                                              
                        especialidades += "esp ";                     
                        espTxtClick = true;
                        espBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 4:
                        tipo_pizza = "especial";                                              
                        especialidades += "esp ";                     
                        espTxtClick = true;
                        espBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                }
            }
            
        }catch(HeadlessException e){
            JOptionPane.showMessageDialog(null, "no se a seleccionado un tamaño" + e, "operacion", JOptionPane.ERROR_MESSAGE);
                
        }
        
                
    }//GEN-LAST:event_espTxtMouseClicked

    private void espTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_espTxtMouseEntered
        // TODO add your handling code here:
        if(!espTxtClick){
            espBtn.setBackground(new Color(247, 148, 29));
        }
    }//GEN-LAST:event_espTxtMouseEntered

    private void espTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_espTxtMouseExited
        // TODO add your handling code here:
        if(!espTxtClick){
            espBtn.setBackground(Color.white);
            
        }
    }//GEN-LAST:event_espTxtMouseExited

    private void kkTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kkTxtMouseClicked
        // TODO add your handling code here:
        try{
            if(contador == limite && kkTxtClick || kkBtn.getBackground().equals(new Color(247,148,29)) && kkTxtClick ){
                kkBtn.setBackground(Color.white);
                contador --;
                mostrarContador();         
                especialidades = especialidades.replace("kok ", "");
                kkTxtClick = false;
                return;
            }
            if (contador < limite && !kkTxtClick) {
                switch (limite) {
                    case 1:
                        tipo_pizza = "kokos";
                    
                        kkTxtClick = true;
                        kkBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 2:
                        tipo_pizza = "kokos";                                              
                        especialidades += "kok ";                     
                        kkTxtClick = true;
                        kkBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 4:
                        tipo_pizza = "kokos";                                              
                        especialidades += "kok ";                     
                        kkTxtClick = true;
                        kkBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                }
            }
            
        }catch(HeadlessException e){
            JOptionPane.showMessageDialog(null, "no se a seleccionado un tamaño" + e, "operacion", JOptionPane.ERROR_MESSAGE);
                
        }
        
                
    }//GEN-LAST:event_kkTxtMouseClicked

    private void kkTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kkTxtMouseEntered
        // TODO add your handling code here:
        if(!kkTxtClick){
            kkBtn.setBackground(new Color(247, 148, 29));
        }
    }//GEN-LAST:event_kkTxtMouseEntered

    private void kkTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kkTxtMouseExited
        // TODO add your handling code here:
        if(!kkTxtClick){
            kkBtn.setBackground(Color.white);
            
        }
    }//GEN-LAST:event_kkTxtMouseExited

    private void chinTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chinTxtMouseClicked
        // TODO add your handling code here:
        try{
            if(contador == limite && chinTxtClick || chinBtn.getBackground().equals(new Color(247,148,29)) && chinTxtClick ){
                chinBtn.setBackground(Color.white);
                contador --;
                mostrarContador();     
                especialidades = especialidades.replace("chin ", "");    
                chinTxtClick = false;
                return;
            }
            if (contador < limite && !chinTxtClick) {
                switch (limite) {
                    case 1:
                        tipo_pizza = "chingona";
                    
                        chinTxtClick = true;
                        chinBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 2:
                        tipo_pizza = "chingona";                                           
                        especialidades += "chin ";                    
                        chinTxtClick = true;
                        chinBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 4:
                        tipo_pizza = "chingona";                                           
                        especialidades += "chin ";                    
                        chinTxtClick = true;
                        chinBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                }
            }
            
        }catch(HeadlessException e){
            JOptionPane.showMessageDialog(null, "no se a seleccionado un tamaño" + e, "operacion", JOptionPane.ERROR_MESSAGE);
                
        }
        
                
    }//GEN-LAST:event_chinTxtMouseClicked

    private void chinTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chinTxtMouseEntered
        // TODO add your handling code here:
        if(!chinTxtClick){
            chinBtn.setBackground(new Color(247, 148, 29));
        }
    }//GEN-LAST:event_chinTxtMouseEntered

    private void chinTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chinTxtMouseExited
        // TODO add your handling code here:
        if(!chinTxtClick){
            chinBtn.setBackground(Color.white);
            
        }
    }//GEN-LAST:event_chinTxtMouseExited

    private void vegTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vegTxtMouseClicked
        // TODO add your handling code here:
        try{
            if(contador == limite && vegTxtClick || vegBtn.getBackground().equals(new Color(247,148,29)) && vegTxtClick ){
                vegBtn.setBackground(Color.white);
                contador --;
                mostrarContador();  
                especialidades = especialidades.replace("veg ", "");     
                mexTxtClick = false;
                return;
            }
            if (contador < limite && !vegTxtClick) {
                switch (limite) {
                    case 1:
                        tipo_pizza = "vegetariana";
                    
                        vegTxtClick = true;
                        vegBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 2:
                        tipo_pizza = "vegetariana";                                           
                        especialidades += "veg ";                    
                        vegTxtClick = true;
                        vegBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 4:
                        tipo_pizza = "vegetariana";                                           
                        especialidades += "veg ";                    
                        vegTxtClick = true;
                        vegBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                }
            }
            
        }catch(HeadlessException e){
            JOptionPane.showMessageDialog(null, "no se a seleccionado un tamaño" + e, "operacion", JOptionPane.ERROR_MESSAGE);
                
        }
        
                
    }//GEN-LAST:event_vegTxtMouseClicked

    private void vegTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vegTxtMouseEntered
        // TODO add your handling code here:
        if(!vegTxtClick){
            vegBtn.setBackground(new Color(247, 148, 29));
        }
    }//GEN-LAST:event_vegTxtMouseEntered

    private void vegTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vegTxtMouseExited
        // TODO add your handling code here:
        if(!vegTxtClick){
            vegBtn.setBackground(Color.white);
            
        }
    }//GEN-LAST:event_vegTxtMouseExited

    private void capTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_capTxtMouseClicked
        // TODO add your handling code here:
        try{
            if(contador == limite && capTxtClick || capBtn.getBackground().equals(new Color(247,148,29)) && capTxtClick ){
                capBtn.setBackground(Color.white);
                contador --;
                mostrarContador();                  
                especialidades = especialidades.replace("capri ", ""); 
                capTxtClick = false;
                return;
            }
            if (contador < limite && !capTxtClick) {
                switch (limite) {
                    case 1:
                        tipo_pizza = "caprichosa";
                    
                        capTxtClick = true;
                        capBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 2:
                        tipo_pizza = "caprichosa";                                           
                        especialidades += "capri ";                      
                        capTxtClick = true;
                        capBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 4:
                        tipo_pizza = "caprichosa";                                           
                        especialidades += "capri ";                      
                        capTxtClick = true;
                        capBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                }
            }
            
        }catch(HeadlessException e){
            JOptionPane.showMessageDialog(null, "no se a seleccionado un tamaño" + e, "operacion", JOptionPane.ERROR_MESSAGE);
                
        }
        
                
    }//GEN-LAST:event_capTxtMouseClicked

    private void capTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_capTxtMouseEntered
        // TODO add your handling code here:
        if(!capTxtClick){
            capBtn.setBackground(new Color(247, 148, 29));
        }
    }//GEN-LAST:event_capTxtMouseEntered

    private void capTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_capTxtMouseExited
        // TODO add your handling code here:
        if(!capTxtClick){
            capBtn.setBackground(Color.white);
            
        }
    }//GEN-LAST:event_capTxtMouseExited

    private void quesoTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quesoTxtMouseClicked
        // TODO add your handling code here:
        try{
            if(contador == limite && quesoTxtClick || quesoBtn.getBackground().equals(new Color(247,148,29)) && quesoTxtClick ){
                quesoBtn.setBackground(Color.white);
                contador --;
                mostrarContador();      
                especialidades = especialidades.replace("qso ", ""); 
                quesoTxtClick = false;
                return;
            }
            if (contador < limite && !quesoTxtClick) {
                switch (limite) {
                    case 1:
                        tipo_pizza = "queso";
                    
                        quesoTxtClick = true;
                        quesoBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 2:
                        tipo_pizza = "queso";                                           
                        especialidades += "qso ";                      
                        quesoTxtClick = true;
                        quesoBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 4:
                        tipo_pizza = "queso";                                           
                        especialidades += "qso ";                      
                        quesoTxtClick = true;
                        quesoBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                }
            }
            
        }catch(HeadlessException e){
            JOptionPane.showMessageDialog(null, "no se a seleccionado un tamaño" + e, "operacion", JOptionPane.ERROR_MESSAGE);
                
        }
        
                
    }//GEN-LAST:event_quesoTxtMouseClicked

    private void quesoTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quesoTxtMouseEntered
        // TODO add your handling code here:
        if(!quesoTxtClick){
            quesoBtn.setBackground(new Color(247, 148, 29));
        }
    }//GEN-LAST:event_quesoTxtMouseEntered

    private void quesoTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quesoTxtMouseExited
        // TODO add your handling code here:
        if(!quesoTxtClick){
            quesoBtn.setBackground(Color.white);
            
        }
    }//GEN-LAST:event_quesoTxtMouseExited

    private void pasTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pasTxtMouseClicked
        // TODO add your handling code here:
        try{
            if(contador == limite && pasTxtClick || pasBtn.getBackground().equals(new Color(247,148,29)) && pasTxtClick ){
                pasBtn.setBackground(Color.white);
                contador --;
                mostrarContador();     
                especialidades = especialidades.replace("pas ", "");  
                pasTxtClick = false;
                return;
            }
            if (contador < limite && !pasTxtClick) {
                switch (limite) {
                    case 1:
                        tipo_pizza = "pastor";
                    
                        pasTxtClick = true;
                        pasBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 2:
                        tipo_pizza = "pastor";                                      
                        especialidades += "pas ";                      
                        pasTxtClick = true;
                        pasBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 4:
                        tipo_pizza = "pastor";                                      
                        especialidades += "pas ";                      
                        pasTxtClick = true;
                        pasBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                }
            }
            
        }catch(HeadlessException e){
            JOptionPane.showMessageDialog(null, "no se a seleccionado un tamaño" + e, "operacion", JOptionPane.ERROR_MESSAGE);
                
        }
        
                
    }//GEN-LAST:event_pasTxtMouseClicked

    private void pasTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pasTxtMouseEntered
        // TODO add your handling code here:
        if(!pasTxtClick){
            pasBtn.setBackground(new Color(247, 148, 29));
        }
    }//GEN-LAST:event_pasTxtMouseEntered

    private void pasTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pasTxtMouseExited
        // TODO add your handling code here:
        if(!pasTxtClick){
            pasBtn.setBackground(Color.white); 
                        
        }
    }//GEN-LAST:event_pasTxtMouseExited

    private void mexwTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mexwTxtMouseClicked
        // TODO add your handling code here:
        try{
            if(contador == limite && mexwTxtClick || mexwBtn.getBackground().equals(new Color(247,148,29)) && mexwTxtClick ){
                mexwBtn.setBackground(Color.white);
                contador --;
                mostrarContador();     
                especialidades = especialidades.replace("mexi ", "");  
                mexwTxtClick = false;
                return;
            }
            if (contador < limite && !mexwTxtClick) {
                switch (limite) {
                    case 1:
                        tipo_pizza = "mexiwaiana";
                    
                        mexwTxtClick = true;
                        mexwBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 2:
                        tipo_pizza = "mexiwaiana";                                                              
                        especialidades += "mexi ";  
                        mexwTxtClick = true;
                        mexwBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                        break;
                    case 4:
                        tipo_pizza = "mexiwaiana";                                      
                        especialidades += "mexi ";                      
                        mexwTxtClick = true;
                        mexwBtn.setBackground(new Color(247,148,29));
                        contador ++;
                        mostrarContador();
                }
            }
            
        }catch(HeadlessException e){
            JOptionPane.showMessageDialog(null, "no se a seleccionado un tamaño" + e, "operacion", JOptionPane.ERROR_MESSAGE);
                
        }
        
                
    }//GEN-LAST:event_mexwTxtMouseClicked

    private void mexwTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mexwTxtMouseEntered
        // TODO add your handling code here:
        if(!mexwTxtClick){
            mexwBtn.setBackground(new Color(247, 148, 29));
        }
    }//GEN-LAST:event_mexwTxtMouseEntered

    private void mexwTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mexwTxtMouseExited
        // TODO add your handling code here:
        if(!mexwTxtClick){
            mexwBtn.setBackground(Color.white);
            
        }
    }//GEN-LAST:event_mexwTxtMouseExited

       
    
    private void btnConfirmarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmarMouseClicked
        
        Pedido.ConsultarPedidoP();
        
    }//GEN-LAST:event_btnConfirmarMouseClicked

    private void btnConfirmarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmarMouseEntered
        // TODO add your handling code here:
        capBtn6.setBackground(Color.orange);
        
    }//GEN-LAST:event_btnConfirmarMouseEntered

    private void btnConfirmarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmarMouseExited
        // TODO add your handling code here:
        capBtn6.setBackground(new Color(255,153,0));
    }//GEN-LAST:event_btnConfirmarMouseExited

    
    
    
    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
           
        tipo_tamaño = (String) jComboBox3.getSelectedItem();
        especialidades = "";
        tipo_tamaño = switch (tipo_tamaño) {
            case "Individual" -> "individual";
            case "Chica" -> "chica";
            case "Mediana" -> "mediana";
            case "Grande" -> "grande";
            case "Jumbo" -> "jumbo";
            case "Rectangular" -> "rectangular";
            default -> null;
        };
        limite = LimiteDeEleccion(tipo_tamaño);
        contador = 0;
        mostrarContador();
        
        if ("jumbo".equals(tipo_tamaño) || "rectangular".equals(tipo_tamaño)) {
            jComboBox2.setEnabled(false);
            tipo_orilla = "sencilla";
        }
        else{
            jComboBox2.setEnabled(true);
        }
        
        
        hawBtn.setBackground(Color.white);
        cfBtn.setBackground(Color.white);
        pepBtn.setBackground(Color.white);
        mexBtn.setBackground(Color.white);
        kkBtn.setBackground(Color.white);
        vegBtn.setBackground(Color.white);
        espBtn.setBackground(Color.white);
        chinBtn.setBackground(Color.white);
        pasBtn.setBackground(Color.white);
        quesoBtn.setBackground(Color.white);
        mexwBtn.setBackground(Color.white);
        capBtn.setBackground(Color.white);
        
            cfTxtClick = false;
            hawTxtClick = false;
            pepTxtClick = false;
            mexTxtClick = false;
            kkTxtClick = false;
            vegTxtClick = false;
            espTxtClick = false;
            chinTxtClick = false;
            pasTxtClick = false;
            quesoTxtClick = false;
            mexwTxtClick = false;
            capTxtClick = false;
       // JOptionPane.showMessageDialog(null, tipo_tamaño, "info", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        
        
        tipo_orilla = (String) jComboBox2.getSelectedItem();
        
        tipo_orilla = switch (tipo_orilla) {
            case "Sencilla" -> "sencilla";
            case "Queso Manchego" -> "manchego";
            case "Queso Crema" -> "crema";
            default -> null;
        };
         
    }//GEN-LAST:event_jComboBox2ActionPerformed
    
    
    public static int LimiteDeEleccion(String condicion){
                
        int limite;
        limite = switch (condicion) {            
            case "individual", "chica" -> 1;
            case "mediana", "grande" ->2;   
            case "jumbo", "rectangular" -> 4;
            default -> 12;
        };
        
        String limm = String.valueOf(limite);
        mostrarLim(limm);
        return limite;
    }
    
    public static void mostrarLim(String valor){
       
       JLimite.setText("limite de especialidades: " + valor + " " );
    }
    public void mostrarContador(){
    
        jContador.setText("Contador: " + contador);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pizzas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pizzas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pizzas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pizzas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pizzas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel JLimite;
    public static javax.swing.JLabel btnConfirmar;
    private javax.swing.JPanel capBtn;
    private javax.swing.JPanel capBtn6;
    private javax.swing.JLabel capTxt;
    private javax.swing.JPanel cfBtn;
    private javax.swing.JLabel cfTxt;
    private javax.swing.JPanel chinBtn;
    private javax.swing.JLabel chinTxt;
    private javax.swing.JPanel espBtn;
    private javax.swing.JLabel espTxt;
    private javax.swing.JPanel hawBtn;
    private javax.swing.JLabel hawTxt;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jContador;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JPanel jPanelEspacio;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JPanel jpanelTBblocation;
    private javax.swing.JPanel kkBtn;
    private javax.swing.JLabel kkTxt;
    private javax.swing.JLabel lbMenu;
    private javax.swing.JPanel mexBtn;
    private javax.swing.JLabel mexTxt;
    private javax.swing.JPanel mexwBtn;
    private javax.swing.JLabel mexwTxt;
    private javax.swing.JPanel pasBtn;
    private javax.swing.JLabel pasTxt;
    private javax.swing.JPanel pepBtn;
    private javax.swing.JLabel pepTxt;
    private javax.swing.JPanel quesoBtn;
    private javax.swing.JLabel quesoTxt;
    public static javax.swing.JTable tbPizza;
    private javax.swing.JPanel vegBtn;
    private javax.swing.JLabel vegTxt;
    // End of variables declaration//GEN-END:variables
}
